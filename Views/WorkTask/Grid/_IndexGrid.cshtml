@model IEnumerable<WorkTask>

@{
    Pagination paging = ViewBag.Pagination;
    int userId = ViewBag.UserId;
    var isPermisionsUser = User.IsAdmin() || User.IsPermission(Permission.Secretary);
}

@(Html.Grid(Model)
    .Build(columns =>
    {
        columns.Add(model => model.Id).Titled("Номер").Named("id").Hidden();
        columns.Add(model => (model.IsUrgent ? "<span class='mb-1' data-placement='top' data-toggle='tooltip' title='Особое внимание'><i class='fas fa-star-exclamation'></i></span>" : "") +
            (model.TaskManagerId == userId ? "<span class='mb-1' data-placement='top' data-toggle='tooltip' title='Создатель задачи'><i class='fas fa-user-tie'></i></span>" : "") + 
            (model.TaskResponsibleId == userId ? "<span class='mb-1' data-placement='top' data-toggle='tooltip' title='Исполнитель'><i class='fas fa-user-tag'></i></span>" : "")
        ).Encoded(false).Css("w-px-40 button text-center").Titled("#");
        columns.Add(model => 
                             $"<span data-placement='top' data-toggle='tooltip' title='Дата создание задачи: {model.CreateDate.ToShortDateString()} в {model.CreateDate:HH:mm}.   Последнее изменение: {model.UpdateDate.ToShortDateString()} в {model.UpdateDate:HH:mm}'>{model.TaskManagerUser.FullName}</span>")
            .Encoded(false).Titled("Поставил задачу").Css("w-px-130");
        columns.Add(model => model.DocumentNumber).Titled("Номер документа").Css("w-px-120");
        columns.Add(model => model.Name).Titled("Наименование").Css("w-px-150");
        columns.Add(model => model.ShortDiscription).Titled("Краткое описание").Css("overflow-wrap");
        columns.Add(model => $"<span data-placement='top' data-toggle='tooltip' title='{model.Department.Name}'>{model.TaskResponsibleUser.FullName}</span>")
            .Titled("Исполнитель").Encoded(false).Css("w-px-130");
        columns.Add(model => model.ComplitionTimeLine).Encoded(false).Titled("Срок выполнения").Css("w-px-160 overflow-wrap");
        columns.Add(model =>
            $"<a class='btn btn-info' href='{Url.Action("ShowModal", "WorkTask", new {id = model.Id})}'" +
            " data-placement='top' data-toggle='tooltip' title='Открыть окно с информацией о задаче' " +
            "onclick='showModal(event)' data-alert-text='Не удалось открыть окно задачи'>" +
            "<i class='fas fa-external-link-alt'></i></a>").Css("w-px-60 button").Encoded(false);
        columns.Add(model =>
            $"<a class='btn btn-success' href='{Url.Action("EditModal", "WorkTask", new {id = model.Id})}'" +
            " data-placement='top' data-toggle='tooltip' title='Редактировать задачу' " +
            "onclick='showModal(event)' data-alert-text='Не удалось открыть окно редактирования задачи'>" +
            "<i class='fas fa-edit'></i></a>").Css("w-px-60 button").Encoded(false);
        columns.Add(model => model.IsArchive).RenderedAs(model => (isPermisionsUser || userId == model.TaskManagerId ?
            $"<a class='btn btn-danger' href='{Url.Action("DeleteMoveToArchive", "WorkTask", new {id = model.Id})}'" +
            " data-placement='top' data-toggle='tooltip' title='Удалить задачу' " +
            "onclick='actionWarning(event)' data-alert-text='Вы уверены что хотите убрать задачу в архив?'>" +
            "<i class='fas fa-trash-alt'></i></a>" : "")).Css("w-px-60 button").Encoded(false);
    })
    .Css("table-striped")
    .AppendCss("table-hover")
    .RowAttributed(model => new
    {
        @class = (model.IsUrgent ? "table-warning" : null) + " " +
                 (!model.IsRepeat && model.CompletionDate.DayOfYear < DateTime.Now.DayOfYear ? "table-danger" : null)
    })
    .Empty("Задачи не найдены")
    .Pageable(pager =>
    {
        pager.PartialViewName = "ViewComponents/_ExtendedPager";
        pager.PageSizes = new Dictionary<int, string> {{0, "Все"}, {10, "10"}, {20, "20"}, {50, "50"}, {100, "100"}};
        pager.ShowPageSizes = true;
        pager.PagesToDisplay = 5;
        pager.CurrentPage = paging.CurrentPage;
        pager.RowsPerPage = paging.Rows;
    })
    .Using(GridFilterMode.Excel))