@{
    FilterDataViewModel filterDataViewModel = ViewBag.FilterData;
}
<section class="container">
    <h2 >Список призывников находящихся в директивных указаниях</h2>

    <div class="row mt-2">
        <div class="col-lg-4">
            @Html.Label("DirectiveTypeIdFilter", "Вид директивного указания:", new {@class="col-form-label"})
            @Html.DropDownList("DirectiveTypeIdFilter", 
                new SelectList(filterDataViewModel.DirectiveTypes, "Id", "Name", 0),
                "Все",
                new {id="DirectiveTypeIdFilter", @class="form-control border-info"})
        </div>
        <div class="col-lg-4">
            @Html.Label("RequirementTypeIdFilter", "Требование от:", new {@class="col-form-label"})
            @Html.DropDownList("RequirementTypeIdFilter", 
                new SelectList(filterDataViewModel.RequirementTypes, "Id", "Name", 0),
                "Все",
                new {id="RequirementTypeIdFilter", @class="form-control border-info"})
        </div>
        <div class="col-lg-4">
            @Html.Label("MilitaryUnitIdFilter", "Воинская часть:", new {@class="col-form-label"})
            @Html.DropDownList("MilitaryUnitIdFilter", 
                new SelectList(filterDataViewModel.MilitaryUnits.Select(m => new
                {
                    Value = m.Id,
                    Text = $"{m.Id} ({m.Name})"
                }), "Value", "Text", 0),
                "Все",
                new {id="MilitaryUnitIdFilter", @class="form-control border-info"})
        </div>
    </div>
    <div class="row mt-2">
        <div class="col-lg-4">
            @Html.Label("MilitaryComissariatIdFilter", "Военный комиссариат (районный):", new {@class="col-form-label"})
            @Html.DropDownList("MilitaryComissariatIdFilter", 
                new SelectList(filterDataViewModel.MilitaryComissariats, "Id", "ShortName", 0),
                "Все",
                new {id="MilitaryComissariatIdFilter", @class="form-control border-info"})
        </div>
        <div class="col-lg-6">
            @Html.Label("Search", "Поиск (по ФИО):", new {@class="col-form-label"})
            @Html.TextBox("Search", "", new {id="Search", @class="form-control border-info", placeholder="Поиск", autocomplete="off"})
        </div>
        <div class="col-lg-1 custom-control custom-switch custom-switch-warning">
            @Html.CheckBox("IsMarkFilter", false, new {id="IsMarkFilter", autocomplete="off", @class="custom-control-input input-warning"})
            @Html.Label("IsMarkFilter", "Ошибки", new {@class="custom-control-label cursor-pointer"})
        </div>
        <div class="col-lg-1 custom-control custom-switch custom-switch-warning">
            @Html.CheckBox("IsDmoFilter", false, new {id="IsDmoFilter", autocomplete="off", @class="custom-control-input input-danger"})
            @Html.Label("IsDmoFilter", "ДМО", new {@class="custom-control-label cursor-pointer"})
        </div>
    </div>

    <div class="row align-items-end mt-4 mb-2">
        <div class="col-lg-8">
            <h5>Всего по директивным указаниям: <b>@ViewData["personsCount"]</b> чел.</h5>
        </div>
        <div class="col-lg-4 text-right">
            <a asp-controller="PersonalGuidance" asp-action="CreateModal" class="btn btn-success"
               onclick="showModal(event)" data-alert-text="Не удалось открыть окно добавления персональщика">
                 <i class="fas fa-user-plus"></i> Добавить персональщика
            </a>
        </div>
    </div>

    @Html.AjaxGrid(Url.Action("ListGrid", new {exitMode = true}))
</section>

<div id="modalContainer"></div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            if (localStorage.getItem('DirectiveTypeIdFilter')){
                document.getElementById('DirectiveTypeIdFilter').value = localStorage.getItem('DirectiveTypeIdFilter')
            }
            if (localStorage.getItem('RequirementTypeIdFilter')){
                document.getElementById('RequirementTypeIdFilter').value = localStorage.getItem('RequirementTypeIdFilter')
            }
            if (localStorage.getItem('MilitaryUnitIdFilter')){
                document.getElementById('MilitaryUnitIdFilter').value = localStorage.getItem('MilitaryUnitIdFilter')
            }
            if (localStorage.getItem('MilitaryComissariatIdFilter')){
                document.getElementById('MilitaryComissariatIdFilter').value = localStorage.getItem('MilitaryComissariatIdFilter')
            }
            document.getElementById("Search").addEventListener('keyup', function(e) {
                e.preventDefault()
                reloadTable()
            })
            document.getElementById("DirectiveTypeIdFilter").addEventListener('change', function(e) {
                e.preventDefault()
                let select = document.getElementById('DirectiveTypeIdFilter')
                localStorage.setItem('DirectiveTypeIdFilter',select.value)
                reloadTable()
            })
            document.getElementById("RequirementTypeIdFilter").addEventListener('change', function(e) {
                e.preventDefault()
                let select = document.getElementById('RequirementTypeIdFilter')
                localStorage.setItem('RequirementTypeIdFilter',select.value)
                reloadTable()
            })
            document.getElementById("MilitaryUnitIdFilter").addEventListener('change', function(e) {
                e.preventDefault()
                let select = document.getElementById('MilitaryUnitIdFilter')
                localStorage.setItem('MilitaryUnitIdFilter',select.value)
                reloadTable()
            })
            document.getElementById("MilitaryComissariatIdFilter").addEventListener('change', function(e) {
                e.preventDefault()
                let select = document.getElementById('MilitaryComissariatIdFilter')
                localStorage.setItem('MilitaryComissariatIdFilter',select.value)
                reloadTable()
            })
            document.getElementById('IsMarkFilter').addEventListener('change', function(e) {
                e.preventDefault()
                reloadTable()
            })
            document.getElementById('IsDmoFilter').addEventListener('change', function(e) {
                e.preventDefault()
                reloadTable()
            })
        })
               
    </script>
}